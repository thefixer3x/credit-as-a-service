apiVersion: apps/v1
kind: Deployment
metadata:
  name: caas-api-gateway
  namespace: caas-platform
  labels:
    app.kubernetes.io/name: caas-platform
    app.kubernetes.io/instance: caas-platform
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: caas-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: caas-platform
      app.kubernetes.io/component: api-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: caas-platform
        app.kubernetes.io/instance: caas-platform
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: api-gateway
        app.kubernetes.io/part-of: caas-platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3002"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: caas-platform-sa
      securityContext:
        fsGroup: 2000
      containers:
      - name: api-gateway
        image: caas/core-api:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3002
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: caas-platform-config
              key: NODE_ENV
        - name: PORT
          value: "3002"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: caas-platform-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: caas-platform-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: caas-platform-secrets
              key: JWT_SECRET
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: caas-platform-secrets
              key: JWT_REFRESH_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: caas-platform-secrets
              key: ENCRYPTION_KEY
        - name: KAFKA_BROKER
          valueFrom:
            configMapKeyRef:
              name: caas-platform-config
              key: KAFKA_BROKER
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: caas-platform-config
              key: LOG_LEVEL
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        emptyDir: {}
      - name: uploads
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: caas-api-gateway
  namespace: caas-platform
  labels:
    app.kubernetes.io/name: caas-platform
    app.kubernetes.io/instance: caas-platform
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: caas-platform
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3002
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: caas-platform
    app.kubernetes.io/component: api-gateway
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: caas-api-gateway-hpa
  namespace: caas-platform
  labels:
    app.kubernetes.io/name: caas-platform
    app.kubernetes.io/instance: caas-platform
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: caas-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: caas-api-gateway
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
